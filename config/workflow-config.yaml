# Workflow Configuration
# Integration settings for enterprise workflow orchestration

version: "1.0"

# Global workflow settings
global_settings:
  # Execution settings
  max_concurrent_phases: 1
  phase_timeout_minutes: 30
  action_timeout_minutes: 5

  # Compliance settings
  coverage_minimum: 0.85
  security_scan_required: true
  code_quality_gates: true

  # Validation settings
  validate_before_execution: true
  dry_run_by_default: false
  require_approval: false

# Integration with existing framework
framework_integration:
  # Agentic framework settings
  enable_cost_optimization: true
  respect_quota_limits: true
  fallback_to_local: true

  # CLI integration
  preserve_existing_commands: true
  add_workflow_commands: true
  enhanced_status_reporting: true

# Phase execution settings
phase_settings:
  # Phase 0: Project Baseline
  phase0:
    enabled: true
    skip_if_exists: true
    validate_git_clean: true

  # Phase 1: Repo Hygiene
  phase1:
    enabled: true
    license_type: "MIT"
    require_security_md: true

  # Phase 2: Contracts & Codegen
  phase2:
    enabled: true
    schema_validation: true
    cross_language_tests: true

  # Phase 2A: P_ Folder Integration
  phase2a:
    enabled: false  # Disabled until P_ folders analyzed
    migration_strategy: "incremental"

# Compliance gates
compliance:
  # Security requirements
  security:
    scan_dependencies: true
    check_secrets: true
    validate_permissions: true
    denylist_patterns:
      - "eval("
      - "os.system("
      - "DROP TABLE"
      - "shell=True in untrusted context"

  # Code quality requirements
  quality:
    min_coverage: 0.85
    lint_enforcement: true
    type_check_enforcement: true

  # Testing requirements
  testing:
    unit_tests_required: true
    integration_tests_required: true
    contract_tests_required: true

# Template system
templates:
  base_path: "workflows/templates"

  # Available templates
  available:
    - taskfile_minimal
    - makefile_minimal
    - mit_license
    - codeowners_min
    - security_min
    - issue_bug
    - issue_feature
    - docs_readme
    - schema_price_tick
    - schema_indicator_vector
    - schema_signal
    - schema_order_intent
    - schema_execution_report
    - schema_calendar_event
    - schema_reentry_decision
    - mql4_contract_parsers

# Monitoring and reporting
monitoring:
  enable_metrics: true
  log_level: "INFO"
  progress_reporting: true

  # Status reporting
  status_includes:
    - phase_progress
    - compliance_status
    - integration_health
    - performance_metrics

# Emergency controls
emergency:
  enable_rollback: true
  backup_before_changes: true
  max_rollback_depth: 5

  # Circuit breakers
  circuit_breakers:
    max_failed_actions: 3
    max_failed_phases: 2
    auto_stop_on_critical: true

# Integration points
integrations:
  # Existing CLI commands
  cli_commands:
    - name: "run-job"
      enhance_with_workflow: true
      add_validation: true

  # Existing framework
  agentic_framework:
    - name: "execute"
      add_workflow_phase: true
      add_compliance_check: true

  # Docker integration
  docker:
    validate_compose: true
    test_containers: true
    health_check_services: true
