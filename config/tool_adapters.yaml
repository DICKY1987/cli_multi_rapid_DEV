# Tool Adapter Configuration for CLI Orchestrator
# Defines tool selection, paths, and configuration for the adapter layer

# Primary tool selection
vcs: git                    # git | gh
containers: docker          # docker
editor: vscode              # vscode
js_runtime: node            # node
ai_cli: claude              # claude | openai
precommit: true             # enable pre-commit hooks

# Python quality tools configuration
python_quality:
  ruff: true                # Linting and code formatting
  mypy: true                # Type checking
  bandit: true              # Security analysis
  semgrep: true             # Static analysis

# Tool-specific paths (optional - falls back to PATH)
paths:
  # VCS tools
  git: git                  # Git executable
  gh: gh                    # GitHub CLI

  # Container tools
  docker: docker            # Docker executable

  # Editor
  code: code                # VS Code executable

  # JavaScript runtime
  node: node                # Node.js executable
  npx: npx                  # NPX executable

  # AI CLIs
  claude: claude            # Claude CLI
  openai: openai            # OpenAI CLI

  # Python quality tools
  pre_commit: pre-commit    # Pre-commit executable
  ruff: ruff                # Ruff linter
  mypy: mypy                # MyPy type checker
  bandit: bandit            # Bandit security scanner
  semgrep: semgrep          # Semgrep static analyzer

# Tool-specific configuration
tool_config:
  # Git configuration
  git:
    timeout_ms: 30000
    env:
      GIT_EDITOR: code

  # Docker configuration
  docker:
    timeout_ms: 60000
    compose_file: docker-compose.yml

  # VS Code configuration
  vscode:
    timeout_ms: 10000
    recommended_extensions:
      - ms-python.python
      - ms-python.black-formatter
      - charliermarsh.ruff

  # Node.js configuration
  node:
    timeout_ms: 120000
    npm_registry: https://registry.npmjs.org/

  # AI CLI configuration
  claude:
    timeout_ms: 60000
    model: claude-3-5-sonnet-20241022

  openai:
    timeout_ms: 60000
    model: gpt-4

  # Python quality tools
  ruff:
    timeout_ms: 30000
    args:
      check: ["--select", "E,W,F,I,B,C4,UP"]
      fix: ["--fix-only"]

  mypy:
    timeout_ms: 60000
    config_file: mypy.ini

  bandit:
    timeout_ms: 30000
    args:
      scan: ["-q", "-r"]

  semgrep:
    timeout_ms: 60000
    config: auto

  pre_commit:
    timeout_ms: 120000
